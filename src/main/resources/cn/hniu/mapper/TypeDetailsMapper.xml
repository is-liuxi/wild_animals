<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.hniu.mapper.TypeDetailsMapper">
    <resultMap id="BaseResultMap" type="cn.hniu.pojo.TypeDetails">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="animal_name" property="animalName" jdbcType="VARCHAR"/>
        <result column="image_url" property="imageUrl" jdbcType="VARCHAR"/>
        <result column="type_id" property="typeId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="cn.hniu.pojo.TypeDetails" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, animal_name, image_url, type_id
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from type_details
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from type_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.hniu.pojo.TypeDetails">
    insert into type_details (id, animal_name, image_url, 
      type_id, content)
    values (#{id,jdbcType=INTEGER}, #{animalName,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="cn.hniu.pojo.TypeDetails">
        insert into type_details
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="animalName != null">
                animal_name,
            </if>
            <if test="imageUrl != null">
                image_url,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="animalName != null">
                #{animalName,jdbcType=VARCHAR},
            </if>
            <if test="imageUrl != null">
                #{imageUrl,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.hniu.pojo.TypeDetails">
        update type_details
        <set>
            <if test="animalName != null">
                animal_name = #{animalName,jdbcType=VARCHAR},
            </if>
            <if test="imageUrl != null">
                image_url = #{imageUrl,jdbcType=VARCHAR},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.hniu.pojo.TypeDetails">
    update type_details
    set animal_name = #{animalName,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="cn.hniu.pojo.TypeDetails">
    update type_details
    set animal_name = #{animalName,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>